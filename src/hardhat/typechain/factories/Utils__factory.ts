/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Utils } from "../Utils";

export class Utils__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Utils> {
    return super.deploy(overrides || {}) as Promise<Utils>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Utils {
    return super.attach(address) as Utils;
  }
  connect(signer: Signer): Utils__factory {
    return super.connect(signer) as Utils__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Utils {
    return new Contract(address, _abi, signerOrProvider) as Utils;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_price",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "_scale",
        type: "uint256",
      },
    ],
    name: "_unpackPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610200806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806345bbd14114610030575b600080fd5b61004361003e366004610126565b610055565b60405190815260200160405180910390f35b600060f083901c61ffff60e085901c168261007261271086610175565b905061270f8361ffff1611156100885761270f92505b60006100988661ffff8616610195565b905061270f8361ffff1611156100ae5761270f92505b60006100be8361ffff8616610195565b905060006100cc828461015d565b9050828110156101125760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b604482015260640160405180910390fd5b8061011a5750825b98975050505050505050565b60008060408385031215610138578182fd5b82356001600160e01b03198116811461014f578283fd5b946020939093013593505050565b60008219821115610170576101706101b4565b500190565b60008261019057634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156101af576101af6101b4565b500290565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204e96e1fb5c04af053fdeeba99de37842c8b9dfbfd89ddacf55c1c1a7466ef5cf64736f6c63430008030033";
