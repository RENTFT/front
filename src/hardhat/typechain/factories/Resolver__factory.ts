/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Resolver } from "../Resolver";

export class Resolver__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _admin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Resolver> {
    return super.deploy(_admin, overrides || {}) as Promise<Resolver>;
  }
  getDeployTransaction(
    _admin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_admin, overrides || {});
  }
  attach(address: string): Resolver {
    return super.attach(address) as Resolver;
  }
  connect(signer: Signer): Resolver__factory {
    return super.connect(signer) as Resolver__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Resolver {
    return new Contract(address, _abi, signerOrProvider) as Resolver;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_pt",
        type: "uint8",
      },
    ],
    name: "getPaymentToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_pt",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_v",
        type: "address",
      },
    ],
    name: "setPaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102f03803806102f083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b61025f806100916000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063321c6aea1461003b578063c6ee427f14610050575b600080fd5b61004e61004936600461018c565b610079565b005b61006361005e36600461016b565b610138565b60405161007091906101cd565b60405180910390f35b60ff82166100a25760405162461bcd60e51b815260040161009990610218565b60405180910390fd5b60ff82166000908152600160205260409020546001600160a01b0316156100db5760405162461bcd60e51b8152600401610099906101e1565b6000546001600160a01b031633146101055760405162461bcd60e51b815260040161009990610218565b60ff91909116600090815260016020526040902080546001600160a01b0319166001600160a01b03909216919091179055565b60ff81166000908152600160205260409020546001600160a01b03165b919050565b803560ff8116811461015557600080fd5b60006020828403121561017c578081fd5b6101858261015a565b9392505050565b6000806040838503121561019e578081fd5b6101a78361015a565b915060208301356001600160a01b03811681146101c2578182fd5b809150509250929050565b6001600160a01b0391909116815260200190565b60208082526018908201527f63616e6e6f742072657365742074686520616464726573730000000000000000604082015260600190565b60208082526000908201526040019056fea264697066735822122098f1db062e722f68c5821ccdadfcc960d84411fb14caa37850f72ff471bbe92c64736f6c63430008000033";
